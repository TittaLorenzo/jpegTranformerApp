/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.jpegtransformerappv1;

import java.awt.Dimension;
import java.awt.Image;
import java.awt.Point;
import java.awt.Rectangle;
import java.awt.image.BufferedImage;
import java.awt.image.Raster;
import java.awt.image.WritableRaster;
import java.io.File;
import java.io.FileFilter;
import java.io.IOException;
import javax.imageio.ImageIO;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.jtransforms.dct.DoubleDCT_2D;

/**
 *
 * @author loren
 */
public class JpegTransformerAppv1 extends javax.swing.JFrame {

    public String imagePath;

    public BufferedImage img = null;
    public BufferedImage imgOriginal = null;

    /**
     * Creates new form JpegTransformerApp
     */
    public JpegTransformerAppv1() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelImage = new javax.swing.JPanel();
        jPanelPathImage = new javax.swing.JPanel();
        jLabelPathImage = new javax.swing.JLabel();
        jButtonPathImage = new javax.swing.JButton();
        jTextFieldPathImage = new javax.swing.JTextField();
        jLabelOriginalImageText = new javax.swing.JLabel();
        jLabelModifiedImageText = new javax.swing.JLabel();
        jDesktopPane1 = new javax.swing.JDesktopPane();
        jLabelOriginalImage = new javax.swing.JLabel();
        jLabelModifiedImage = new javax.swing.JLabel();
        jPanelControl = new javax.swing.JPanel();
        jLabelAmpiezza = new javax.swing.JLabel();
        jTextFieldAmpiezza = new javax.swing.JTextField();
        jButtonAmpiezzaMeno = new javax.swing.JButton();
        jButtonAmpiezzaPiu = new javax.swing.JButton();
        jLabelTaglio = new javax.swing.JLabel();
        jTextFieldTaglio = new javax.swing.JTextField();
        jButtonTaglioMeno = new javax.swing.JButton();
        jButtonTaglioPiu = new javax.swing.JButton();
        jButtonElabora = new javax.swing.JButton();
        jLabelTitoloElaborazione = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Jpeg Transformer App");
        setBackground(new java.awt.Color(204, 204, 255));

        jPanelImage.setBackground(new java.awt.Color(204, 204, 255));

        jPanelPathImage.setBackground(new java.awt.Color(241, 202, 231));
        jPanelPathImage.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 12)); // NOI18N

        jLabelPathImage.setFont(new java.awt.Font("Calisto MT", 1, 18)); // NOI18N
        jLabelPathImage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelPathImage.setText("Segli l'immagine (.bmp) da elaborare");

        jButtonPathImage.setText("BROWSE");
        jButtonPathImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPathImageActionPerformed(evt);
            }
        });

        jTextFieldPathImage.setToolTipText("scegli l'immagine ...");
        jTextFieldPathImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldPathImageActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelPathImageLayout = new javax.swing.GroupLayout(jPanelPathImage);
        jPanelPathImage.setLayout(jPanelPathImageLayout);
        jPanelPathImageLayout.setHorizontalGroup(
            jPanelPathImageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPathImageLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanelPathImageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabelPathImage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanelPathImageLayout.createSequentialGroup()
                        .addComponent(jButtonPathImage)
                        .addGap(18, 18, 18)
                        .addComponent(jTextFieldPathImage, javax.swing.GroupLayout.PREFERRED_SIZE, 479, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        jPanelPathImageLayout.setVerticalGroup(
            jPanelPathImageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPathImageLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelPathImage)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelPathImageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextFieldPathImage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelPathImageLayout.createSequentialGroup()
                        .addComponent(jButtonPathImage, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addGap(1, 1, 1)))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        jLabelOriginalImageText.setFont(new java.awt.Font("Calisto MT", 1, 12)); // NOI18N
        jLabelOriginalImageText.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelOriginalImageText.setText("Immagine originale:");

        jLabelModifiedImageText.setFont(new java.awt.Font("Calisto MT", 1, 12)); // NOI18N
        jLabelModifiedImageText.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelModifiedImageText.setText("Immagine modificata:");

        jDesktopPane1.setOpaque(false);
        jDesktopPane1.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                reSize(evt);
            }
        });

        jLabelOriginalImage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelOriginalImage.setFocusTraversalPolicyProvider(true);

        jLabelModifiedImage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jDesktopPane1.setLayer(jLabelOriginalImage, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jLabelModifiedImage, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelOriginalImage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelModifiedImage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabelOriginalImage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelModifiedImage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanelImageLayout = new javax.swing.GroupLayout(jPanelImage);
        jPanelImage.setLayout(jPanelImageLayout);
        jPanelImageLayout.setHorizontalGroup(
            jPanelImageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelImageLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelImageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelPathImage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanelImageLayout.createSequentialGroup()
                        .addComponent(jLabelOriginalImageText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelModifiedImageText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanelImageLayout.createSequentialGroup()
                        .addComponent(jDesktopPane1)
                        .addGap(0, 0, 0)))
                .addContainerGap())
        );
        jPanelImageLayout.setVerticalGroup(
            jPanelImageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelImageLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelPathImage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelImageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelOriginalImageText)
                    .addComponent(jLabelModifiedImageText))
                .addGap(18, 18, 18)
                .addComponent(jDesktopPane1)
                .addGap(5, 5, 5))
        );

        jPanelControl.setBackground(new java.awt.Color(204, 204, 255));
        jPanelControl.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanelControl.setName(""); // NOI18N

        jLabelAmpiezza.setFont(new java.awt.Font("Calisto MT", 1, 12)); // NOI18N
        jLabelAmpiezza.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelAmpiezza.setText("Scegliere ampiezza finestra:");

        jTextFieldAmpiezza.setText("1");
        jTextFieldAmpiezza.setToolTipText("");
        jTextFieldAmpiezza.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jTextFieldAmpiezza.setName(""); // NOI18N
        jTextFieldAmpiezza.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                CheckAmpiezza(evt);
            }
        });

        jButtonAmpiezzaMeno.setText("-");
        jButtonAmpiezzaMeno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAmpiezzaMenoActionPerformed(evt);
            }
        });

        jButtonAmpiezzaPiu.setText("+");
        jButtonAmpiezzaPiu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAmpiezzaPiuActionPerformed(evt);
            }
        });

        jLabelTaglio.setFont(new java.awt.Font("Calisto MT", 1, 12)); // NOI18N
        jLabelTaglio.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelTaglio.setText("Scegliere taglio frequenza:");

        jTextFieldTaglio.setText("0");
        jTextFieldTaglio.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jTextFieldTaglio.setName(""); // NOI18N
        jTextFieldTaglio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldTaglioActionPerformed(evt);
            }
        });
        jTextFieldTaglio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                checkTaglio(evt);
            }
        });

        jButtonTaglioMeno.setText("-");
        jButtonTaglioMeno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonTaglioMenoActionPerformed(evt);
            }
        });

        jButtonTaglioPiu.setText("+");
        jButtonTaglioPiu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonTaglioPiuActionPerformed(evt);
            }
        });

        jButtonElabora.setText("ELABORAZIONE");
        jButtonElabora.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonElaboraActionPerformed(evt);
            }
        });

        jLabelTitoloElaborazione.setFont(new java.awt.Font("Calisto MT", 1, 14)); // NOI18N
        jLabelTitoloElaborazione.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelTitoloElaborazione.setText("PARAMETRI");

        javax.swing.GroupLayout jPanelControlLayout = new javax.swing.GroupLayout(jPanelControl);
        jPanelControl.setLayout(jPanelControlLayout);
        jPanelControlLayout.setHorizontalGroup(
            jPanelControlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelControlLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelControlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelControlLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanelControlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanelControlLayout.createSequentialGroup()
                                .addComponent(jTextFieldTaglio, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonTaglioMeno))
                            .addComponent(jButtonElabora))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonTaglioPiu)
                        .addGap(64, 64, 64))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelControlLayout.createSequentialGroup()
                        .addGroup(jPanelControlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabelTitoloElaborazione, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelAmpiezza, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelTaglio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanelControlLayout.createSequentialGroup()
                                .addGap(0, 45, Short.MAX_VALUE)
                                .addComponent(jTextFieldAmpiezza, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonAmpiezzaMeno)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButtonAmpiezzaPiu)
                                .addGap(58, 58, 58)))
                        .addContainerGap())))
        );
        jPanelControlLayout.setVerticalGroup(
            jPanelControlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelControlLayout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(jLabelTitoloElaborazione)
                .addGap(33, 33, 33)
                .addComponent(jLabelAmpiezza)
                .addGap(18, 18, 18)
                .addGroup(jPanelControlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldAmpiezza, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonAmpiezzaMeno)
                    .addComponent(jButtonAmpiezzaPiu))
                .addGap(30, 30, 30)
                .addComponent(jLabelTaglio)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelControlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldTaglio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonTaglioMeno)
                    .addComponent(jButtonTaglioPiu))
                .addGap(53, 53, 53)
                .addComponent(jButtonElabora)
                .addContainerGap(149, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelImage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelControl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelControl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(jPanelImage, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonAmpiezzaPiuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAmpiezzaPiuActionPerformed
         jTextFieldAmpiezza.setText(Integer.toString(Integer.parseInt(jTextFieldAmpiezza.getText())+1));
    }//GEN-LAST:event_jButtonAmpiezzaPiuActionPerformed

    private void jButtonTaglioPiuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonTaglioPiuActionPerformed
        if(Integer.parseInt(jTextFieldTaglio.getText()) < ((2 * (Integer.parseInt(jTextFieldAmpiezza.getText()))) - 2)){
            jTextFieldTaglio.setText(Integer.toString(Integer.parseInt(jTextFieldTaglio.getText())+1));
        }
    }//GEN-LAST:event_jButtonTaglioPiuActionPerformed

    private void jButtonElaboraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonElaboraActionPerformed
        if(imagePath != null){
            img = null;
            try {
                    img = ImageIO.read(new File(imagePath));
                    imgOriginal = ImageIO.read(new File(imagePath));;
                } catch (IOException e) {
                    e.printStackTrace();
                }           
            int n = Integer.parseInt(jTextFieldAmpiezza.getText());
            if(n > img.getHeight() || n > img.getWidth()){
                n = Integer.min(img.getHeight(), img.getWidth());
                jTextFieldAmpiezza.setText(Integer.toString(n));
            }
            int taglio = Integer.parseInt(jTextFieldTaglio.getText());
            if(taglio < 0){
                taglio = 0;
                jTextFieldTaglio.setText("0");
            }
            if(taglio > 2*n-2){
                taglio = 2*n-2;
                jTextFieldTaglio.setText(Integer.toString(2*n-2));
            }
            for (int i = 0; i < img.getWidth(); i += n) {
                for (int j = 0; j < img.getHeight(); j += n) {
                    int w = Integer.min(n, img.getWidth() - i);
                    int h = Integer.min(n, img.getHeight() - j);  
                    if(w != 1 && h != 1){                                       
                        Raster r = img.getData(new Rectangle(new Point(i, j), new Dimension(w, h)));
                        DoubleDCT_2D dct = new DoubleDCT_2D(h, w);
                        double[][] f = new double[r.getNumBands()][w*h];
                        for(int b = 0; b < r.getNumBands(); b++){
                            f[b] = r.getSamples(i, j, w, h, b, (double[])null);
                        }
                        for(int b = 0; b < r.getNumBands(); b++){
                            dct.forward(f[b], true);
                        }
                        for(int b = 0; b < r.getNumBands(); b++){
                            for (int t = 0; t < f[b].length; t++) {
                                int k = t / w;
                                int l = t % w;
                                if (k + l >= taglio) {
                                    f[b][t] = 0;
                                }
                            }
                        }
                        for(int b = 0; b < r.getNumBands(); b++){
                            dct.inverse(f[b], true);
                        }
                        for(int b = 0; b < r.getNumBands(); b++){
                            for(int k = 0; k < f[b].length; k++)
                            {
                                f[b][k] = (int)f[b][k];
                                f[b][k] = Double.min(f[b][k], 255);
                                f[b][k] = Double.max(f[b][k], 0);
                            }
                        }
                        WritableRaster wr = r.createCompatibleWritableRaster(i, j, w, h);
                        for(int b = 0; b < r.getNumBands(); b++){
                            wr.setSamples(i, j, w, h, b, f[b]);
                        }            
                        img.setData(wr);
                    }
                }
            }
            
            if(img.getWidth() > img.getHeight()){
                Image imageM = img.getScaledInstance(jLabelModifiedImage.getWidth(), -1,
                    Image.SCALE_SMOOTH);
                ImageIcon immagineM = new ImageIcon(imageM);
                jLabelModifiedImage.setIcon(immagineM);
            }
            else{
                Image imageM = img.getScaledInstance(-1, jLabelModifiedImage.getHeight(),
                    Image.SCALE_SMOOTH);
                ImageIcon immagineM = new ImageIcon(imageM);
                jLabelModifiedImage.setIcon(immagineM);
            }
        }
    }//GEN-LAST:event_jButtonElaboraActionPerformed
    
    private void CheckAmpiezza(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CheckAmpiezza
        char enter = evt.getKeyChar();
        if(!(Character.isDigit(enter))){
            evt.consume();
        }
    }//GEN-LAST:event_CheckAmpiezza

    private void jButtonAmpiezzaMenoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAmpiezzaMenoActionPerformed
        if(Integer.parseInt(jTextFieldAmpiezza.getText()) > 0){
            jTextFieldAmpiezza.setText(Integer.toString(Integer.parseInt(jTextFieldAmpiezza.getText())-1));
        }
    }//GEN-LAST:event_jButtonAmpiezzaMenoActionPerformed

    private void jTextFieldTaglioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldTaglioActionPerformed
        
    }//GEN-LAST:event_jTextFieldTaglioActionPerformed

    private void jButtonTaglioMenoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonTaglioMenoActionPerformed
        if(Integer.parseInt(jTextFieldTaglio.getText()) > 0){
            jTextFieldTaglio.setText(Integer.toString(Integer.parseInt(jTextFieldTaglio.getText())-1));
        }
    }//GEN-LAST:event_jButtonTaglioMenoActionPerformed

    private void checkTaglio(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_checkTaglio
        char enter = evt.getKeyChar();
        if(!(Character.isDigit(enter))){
            evt.consume();
        }
    }//GEN-LAST:event_checkTaglio

    private void reSize(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_reSize
        if(img != null){
            if(img.getWidth() > img.getHeight()){
                Image imageM = img.getScaledInstance(jDesktopPane1.getWidth()/2, -1,
                    Image.SCALE_SMOOTH);
                ImageIcon immagineM = new ImageIcon(imageM);
                jLabelModifiedImage.setIcon(immagineM);
            }
            else{
                Image imageM = img.getScaledInstance(-1, jDesktopPane1.getHeight(),
                    Image.SCALE_SMOOTH);
                ImageIcon immagineM = new ImageIcon(imageM);
                jLabelModifiedImage.setIcon(immagineM);
            }
        }
        if(imgOriginal != null){
            if(imgOriginal.getWidth() > imgOriginal.getHeight()){
                Image imageO = imgOriginal.getScaledInstance(jDesktopPane1.getWidth()/2, -1,
                    Image.SCALE_SMOOTH);
                ImageIcon immagineO = new ImageIcon(imageO);
                jLabelOriginalImage.setIcon(immagineO);
            }
            else{
                Image imageO = imgOriginal.getScaledInstance(-1, jDesktopPane1.getHeight(),
                    Image.SCALE_SMOOTH);
                ImageIcon immagineO = new ImageIcon(imageO);
                jLabelOriginalImage.setIcon(immagineO);
            }
        }
    }//GEN-LAST:event_reSize

    private void jTextFieldPathImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldPathImageActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldPathImageActionPerformed

    private void jButtonPathImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPathImageActionPerformed
        if (evt.getSource() == jButtonPathImage) {
            //codice che inserisce immagine nel textfield e nella variabile imagePath
            JFileChooser fileChooser = new JFileChooser();
            fileChooser.setCurrentDirectory(new File("."));
            FileNameExtensionFilter filter = new FileNameExtensionFilter(
                "BMP Images", "bmp");
            fileChooser.setFileFilter(filter);
            int response = fileChooser.showOpenDialog(null);
            if (response == JFileChooser.APPROVE_OPTION) {
                imagePath = fileChooser.getSelectedFile().getAbsolutePath();
                File file = new File(imagePath);
                //resize dell'immagine
                BufferedImage img = null;
                try {
                    img = ImageIO.read(new File(imagePath));
                    imgOriginal = ImageIO.read(new File(imagePath));
                } catch (IOException e) {
                    e.printStackTrace();
                }
                if(img.getWidth() > img.getHeight()){
                    Image imageO = img.getScaledInstance(jLabelOriginalImage.getWidth(), -1,
                        Image.SCALE_SMOOTH);
                    ImageIcon immagineO = new ImageIcon(imageO);
                    jLabelOriginalImage.setIcon(immagineO);
                }
                else{
                    Image imageO = img.getScaledInstance(-1, jLabelOriginalImage.getHeight(),
                        Image.SCALE_SMOOTH);
                    ImageIcon immagineO = new ImageIcon(imageO);
                    jLabelOriginalImage.setIcon(immagineO);
                }
            }
        }
    }//GEN-LAST:event_jButtonPathImageActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JpegTransformerAppv1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JpegTransformerAppv1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JpegTransformerAppv1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JpegTransformerAppv1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JpegTransformerAppv1().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAmpiezzaMeno;
    private javax.swing.JButton jButtonAmpiezzaPiu;
    private javax.swing.JButton jButtonElabora;
    private javax.swing.JButton jButtonPathImage;
    private javax.swing.JButton jButtonTaglioMeno;
    private javax.swing.JButton jButtonTaglioPiu;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JLabel jLabelAmpiezza;
    private javax.swing.JLabel jLabelModifiedImage;
    private javax.swing.JLabel jLabelModifiedImageText;
    private javax.swing.JLabel jLabelOriginalImage;
    private javax.swing.JLabel jLabelOriginalImageText;
    private javax.swing.JLabel jLabelPathImage;
    private javax.swing.JLabel jLabelTaglio;
    private javax.swing.JLabel jLabelTitoloElaborazione;
    private javax.swing.JPanel jPanelControl;
    private javax.swing.JPanel jPanelImage;
    private javax.swing.JPanel jPanelPathImage;
    private javax.swing.JTextField jTextFieldAmpiezza;
    private javax.swing.JTextField jTextFieldPathImage;
    private javax.swing.JTextField jTextFieldTaglio;
    // End of variables declaration//GEN-END:variables
}
